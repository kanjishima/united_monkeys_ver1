//socket.ioの挙動がおかしい。
・二つのブラウザでアクセスするとタイミングによって、appendの中身が片方に偏る
・一つのほうでremoveGameTableするともう片方でできない？
・location.href=でアクセスしようとすると、なぜかもう片方が画面遷移する。
=>socketRouterで外部化したのが原因。socketRouter.startで引き継がれるsocketは、
最新のconnectionイベントが発火したsocketになる。つまりsocketRouterで記述される
socketは"直近でconnection（ロードされた）socket"になるということ。
=>socketRouterを介する際にfunction(data){ socketRouter.XXXXXXXX(soxket,data) };とし、
socketRouterのほうにもsocketを引数として扱うように変更した。app.jsの肥大化させる
方法もあったが、たぶんこちらのほうがメンテナンス性が高い。多少コードの総合計自体は
上がるが、コードの見通しのよさでいえば、この方法の方がすっきりするはず。

//socket.ioのnamespaceでエラーが出る
・"WebSocket is closed before the connection is established."
というエラーがブラウザででる。具体的な解決策はWEBでは見つからなかった。
=>コネクションが形成される前にWebsocketが閉じているよ。
->ioのコネクションが常時開通状態になる前にサーバーが止まってしまったことが
原因。さらに今回の件でいえば"express-socket.io-session"でセッションとソケットを
連携させていたことが問題。どういうことかというと、namespaceで別の接続を確立すると、
ハンドシェイクが働かない（？かどうかは仕様について無知なので何とも言えないが、とに
かくハンドシェイクが動いてない。確かに、セッションは一つなのに、namespaceでいくつも
セッションが紐づくのも変といえば変だ。繰り返すが仕様は知らないので、namespaceでも
ハンドシェイクがうまくいくのかもしれないし、このモジュールでは難しいのかもしれない。
もう一度"express-socket.io-session"の使い方を見る必要がある。
=>対応方法は簡単。サーバーが止まった原因を排除した（今回はsocket.handshake.session.userを
使わずにほかロジックでハンドシェイクを使わないようにしただけ。
=>それよりもセッションを使っていない、セッションの意義を理解していないことの方が問題？

